openapi: 3.0.0
info:
  title: developer-portal-api
  version: '1.0'
servers:
  - url: 'http://localhost:3000'
paths:
  /api-products:
    get:
      summary: get-api-products
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ApiProduct'
      operationId: get-api-products
      description: Returns an API Product array based on query string parameter search
      parameters:
        - schema:
            type: string
          in: query
          name: name
        - schema:
            type: string
          in: query
          name: type
        - schema:
            type: string
          in: query
          name: tag
        - schema:
            type: string
          in: query
          name: validFrom
        - schema:
            type: string
          in: query
          name: validUntil
    parameters: []
    post:
      summary: post-api-product
      operationId: post-api-product
      responses:
        '201':
          description: Created
      description: Post an API Product on developer portal
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApiProduct'
  /apps:
    get:
      summary: get-apps
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/App'
      operationId: get-apps
      description: Returns an Apps array based on query string parameter search
      parameters:
        - schema:
            type: string
          in: query
          name: name
        - schema:
            type: string
          in: query
          name: apiProduct
        - schema:
            type: string
          in: query
          name: validFrom
        - schema:
            type: string
          in: query
          name: validUntil
    post:
      summary: post-app
      operationId: post-app
      responses:
        '201':
          description: Created
      description: Post an App on developer portal
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/App'
  '/apis/{uuid}':
    get:
      summary: get-api-by-id
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Api'
      operationId: get-api-by-id
      description: Return an API to an API UUID
    parameters:
      - schema:
          type: string
        name: uuid
        in: path
        required: true
    put:
      summary: put-api
      operationId: put-api
      responses:
        '200':
          description: OK
      description: Partial update of an API
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Api'
        description: ''
    patch:
      summary: patch-api
      operationId: patch-api
      responses:
        '206':
          description: Partial Content
      description: Partial update of an API
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Api'
        description: ''
    delete:
      summary: delete-api
      operationId: delete-api
      responses:
        '204':
          description: No Content
      description: Deletes an API from developer portal
  /apis:
    get:
      summary: get-apis
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Api'
      operationId: get-apis
      description: Returns an API array based on query string parameter search
      parameters:
        - schema:
            type: string
          in: query
          name: groupId
        - schema:
            type: string
          in: query
          name: name
        - schema:
            type: string
          in: query
          name: basePath
        - schema:
            type: string
          in: query
          name: stage
        - schema:
            type: string
          in: query
          name: validFrom
        - schema:
            type: string
          in: query
          name: validUntil
    post:
      summary: post-api
      operationId: post-api
      responses:
        '201':
          description: Created
          headers: {}
      description: Post an API on developer portal
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Api'
  '/apps/{uuid}':
    parameters:
      - schema:
          type: string
        name: uuid
        in: path
        required: true
    get:
      summary: get-app-by-id
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/App'
      operationId: get-app-by-id
      description: Return an API to an API UUID
    put:
      summary: put-app
      operationId: put-app
      responses:
        '200':
          description: OK
      description: Partial update of an App
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/App'
    patch:
      summary: patch-app
      operationId: patch-app
      responses:
        '206':
          description: Partial Content
      description: Partial update of an App
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/App'
    delete:
      summary: delete-app
      operationId: delete-app
      responses:
        '204':
          description: No Content
      description: Deletes an App from developer portal
  '/api-products/{uuid}':
    parameters:
      - schema:
          type: string
        name: uuid
        in: path
        required: true
    get:
      summary: get-api-product-by-id
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiProduct'
      operationId: get-api-product-by-id
      description: Return an API Product to an API UUID
    put:
      summary: put-api-product
      operationId: put-api-product
      responses:
        '200':
          description: OK
      description: Partial update of an API Product
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApiProduct'
        description: ''
    patch:
      summary: patch-api-product
      operationId: patch-api-product
      responses:
        '206':
          description: Partial Content
      description: Partial update of an API Product
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApiProduct'
        description: ''
    delete:
      summary: delete-api-product
      operationId: delete-api-product
      responses:
        '204':
          description: No Content
      description: Deletes an API Product from developer portal
components:
  schemas:
    Api:
      title: Api
      type: object
      description: represents an API
      x-examples: {}
      properties:
        uuid:
          type: string
          description: 'Unique identifier of an API. UUID, Version 4'
          example: 12345678-abcd-1234-efgh-000000000000
        groupId:
          type: string
          description: Remains the same between different API versions
          example: 12345678-abcd-1234-efgh-000000000000
        versionMajor:
          type: integer
          description: API major version
          example: 1
        versionMinor:
          type: integer
          description: API minor version
          example: 0
        name:
          type: string
          description: API name
          example: MarketplaceApi_1
        basePath:
          type: string
          description: API base path on the API gateway
          example: /rest/marketplace/customer/v1
        openApiDef:
          type: object
          description: 'Open API Specification Document (Swagger), which describes the API'
        stages:
          type: array
          description: Describes on which developer portal stage is this API exposed
          items:
            type: string
            enum:
              - sandbox
              - test
              - prod
            example: sandbox
        gatewayRegistrations:
          type: object
          description: Includes all relevant informations about the API registration on the API gateway
          required:
            - name
            - stage
            - consumerAuth
          properties:
            name:
              type: string
              description: API name on the API gateway
              example: MarketplaceCustomerApi_1-app-2624-1
            stage:
              type: string
              description: Stage of the API gateway
              enum:
                - dev
                - preprod
                - prod
                - sandbox
              example: sandbox
            corsAllowedOrigins:
              type: array
              description: List of allowed origins in URI format for browser usage
              items:
                type: string
                example: 'https://secure.axa.ch'
            consumerAuth:
              type: object
              description: shows allowed API authentication provider types
              required:
                - apiKey
              properties:
                apiKey:
                  type: boolean
                  description: 'True only in case of a public, not protected API'
                  example: 12345678-abcd-1234-efgh-000000000000
                oauth:
                  type: array
                  description: 'OAuth credentials, which a predefined by the API provider'
                  items:
                    type: object
                    properties:
                      scopes:
                        type: array
                        description: Oauth scopes of the API
                        items:
                          type: string
                          example: bff_nils
                      issuer:
                        type: string
                        example: 'https://maam.axa.com/maam'
                        description: Allowed token issuer
                    required:
                      - scopes
                      - issuer
        validFrom:
          type: string
          description: The date from which an API is valid on the developer portal
          example: '2020-01-01'
        validUntil:
          type: string
          description: The date until which an API is valid on the developer portal
          example: '2022-01-01'
      required:
        - uuid
        - groupId
        - versionMajor
        - versionMinor
        - name
        - basePath
        - openApiDef
        - stages
        - gatewayRegistrations
        - validFrom
    ApiProduct:
      title: ApiProduct
      type: object
      description: represents an API product
      properties:
        uuid:
          type: string
          description: 'Unique identifier of an API Product. UUID, Version 4'
          example: 12345678-abcd-1234-efgh-000000000000
        version:
          type: integer
          description: API Product (major) version
          example: 1
        name:
          type: string
          description: API Product name
          example: Cybersecurity
        description:
          type: string
          description: Description of an API Product
          example: Lorem ipsum
        imageUrl:
          type: string
          description: URL to the API Product image or icon or thumbnail
        type:
          type: string
          description: 'shows the API Product exposure: internal or public'
          enum:
            - public
            - internal
          example: public
        tags:
          type: array
          description: An API Product could be tagged on developer portal
          items:
            type: string
            example: health
        apis:
          type: array
          description: APIs that compose the API product
          items:
            $ref: '#/components/schemas/Api'
        validFrom:
          type: string
          description: The date from which an API Product is valid on the developer portal
          example: '2020-01-01'
        validUntil:
          type: string
          description: The date until which an API Product is valid on the developer portal
          example: '2022-01-01'
      required:
        - uuid
        - version
        - name
        - description
        - type
        - apis
        - validFrom
    App:
      title: App
      type: object
      description: represents an API Product consumer application
      properties:
        uuid:
          type: string
          description: 'Unique identifier of an App. UUID, Version 4'
          example: 12345678-abcd-1234-efgh-000000000000
        version:
          type: string
          description: App (major) version
          example: '2'
        name:
          type: string
          description: Application name
          example: Youtube
        description:
          type: string
          description: 'Short description of an application '
          example: Lorem ipsum
        oauthClient:
          type: array
          description: Represents OAuth registrations of an App
          items:
            type: object
            properties:
              clientId:
                type: string
                description: OAuth client id
                example: 123e4567-e89b
              clientSecret:
                type: string
                description: OAuth client secret
                example: 1234-efgh-000000000000
              validFrom:
                type: string
                description: The date from which an OAuth client is valid on the developer portal
                example: '2020-01-01'
              validUntil:
                type: string
                description: The date until which an OAuth client is valid on the developer portal
                example: '2022-01-01'
            required:
              - clientId
              - clientSecret
              - validFrom
        apiKey:
          type: string
          description: 'An API key for usage of public unprotected APIs and API Products. UUID, Version 4'
          example: 12345678-abcd-1234-efgh-000000000000
        apiProducts:
          type: array
          description: 'API Products, which will be consumed by the App'
          items:
            $ref: '#/components/schemas/ApiProduct'
        validFrom:
          type: string
          description: The date from which an App is valid on the developer portal
          example: '2020-01-01'
        validUntil:
          type: string
          description: The date until which an App is valid on the developer portal
          example: '2022-01-01'
      required:
        - uuid
        - version
        - name
        - description
        - apiProducts
        - validFrom
