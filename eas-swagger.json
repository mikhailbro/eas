{
  "openapi": "3.0.2",
  "info": {
    "title": "EAS API",
    "description": "EAS API Documentation, based on AuE exchange and match services",
    "version": "0.1"
  },
  "servers": [
    {
      "url": "/eas/api/v1"
    }
  ],
  "paths": {
    "/ping": {
      "get": {
        "summary": "Check EAS API availability",
        "operationId": "ping",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                },
                "examples": {
                  "example-1": {}
                }
              }
            }
          }
        }
      }
    },
    "/commencements": {
      "post": {
        "summary": "Post new commencements (Eintritte)",
        "operationId": "create-commencements",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Commencement"
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created"
          }
        }
      }
    },
    "/terminations": {
      "post": {
        "summary": "Post new terminations (Austritte)",
        "operationId": "create-terminations",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Termination"
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created"
          }
        }
      }
    },
    "/my-matches": {
      "get": {
        "summary": "\"Get my matches\" from the pension fund (VE) point of view",
        "operationId": "get-my-matches",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Match"
                  }
                }
              }
            }
          }
        },
        "parameters": [],
        "description": "Could be used by a pension fund as a pull batch service. Pension fund will be identified by OAuth token, based on uid of the company"
      },
      "parameters": []
    },
    "/matches/{match-id}": {
      "get": {
        "summary": "Get a match by id",
        "operationId": "get-match",
        "parameters": [
          {
            "name": "matchId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Match"
                }
              }
            }
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "match-id",
          "in": "path",
          "required": true
        }
      ],
      "patch": {
        "summary": "Update match status",
        "operationId": "patch-matches-match-id",
        "responses": {
          "200": {
            "description": "OK"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "string",
                "enum": [
                  "OPEN",
                  "ACCEPTED_BY_RECEIVER",
                  "REJECTED_BY_RECEIVER",
                  "REJECTED_BY_SENDER",
                  "CLOSED_BY_SENDER"
                ]
              }
            }
          }
        },
        "description": "Allowed match status values: OPEN, ACCEPTED_BY_RECEIVER, REJECTED_BY_RECEIVER, REJECTED_BY_SENDER, CLOSED_BY_SENDER"
      }
    },
    "/my-transfers": {
      "get": {
        "summary": "\"Get my transfers\" from the pension fund (VE) point of view",
        "tags": [],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Transfer"
                  }
                }
              }
            }
          }
        },
        "operationId": "get-my-transfers",
        "parameters": [],
        "description": "Could be used by a pension fund as a pull batch service. Pension fund will be identified by OAuth token, based on uid of the company"
      },
      "parameters": []
    },
    "/transfers/{transfer-id}": {
      "get": {
        "summary": "Get a transfer by id",
        "tags": [],
        "responses": {
          "200": {
            "description": "OK"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Transfer"
                }
              }
            }
          }
        },
        "operationId": "get-transfers-transfer-id"
      },
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "transfer-id",
          "in": "path",
          "required": true
        }
      ]
    },
    "/my-received-transfers": {
      "get": {
        "summary": "\"Get my received transfers\" from the pension fund (VE) point of view",
        "tags": [],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Transfer"
                  }
                }
              }
            }
          }
        },
        "operationId": "get-my-received-transfers",
        "parameters": [],
        "description": "Could be used by a pension fund as a pull batch service. Pension fund will be identified by OAuth token, based on uid of the company"
      },
      "parameters": []
    },
    "/transfers": {
      "post": {
        "summary": "Post new transfers with predefined pension funds as sender and reciever",
        "operationId": "post-transfers",
        "responses": {
          "201": {
            "description": "Created"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Transfer"
                }
              }
            }
          }
        }
      },
      "parameters": []
    },
    "/my-sended-transfers": {
      "get": {
        "summary": "\"Get my sended transfers\" from the pension fund (VE) point of view",
        "tags": [],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Transfer"
                  }
                }
              }
            }
          }
        },
        "operationId": "get-my-sended-transfers",
        "parameters": [],
        "description": "Could be used by a pension fund as a pull batch service. Pension fund will be identified by OAuth token, based on uid of the company"
      },
      "parameters": []
    }
  },
  "components": {
    "schemas": {
      "Match": {
        "type": "object",
        "description": "E/A match",
        "properties": {
          "match-id": {
            "type": "string"
          },
          "commencement": {
            "$ref": "#/components/schemas/Commencement"
          },
          "termination": {
            "$ref": "#/components/schemas/Termination"
          },
          "sender": {
            "$ref": "#/components/schemas/PensionFund"
          },
          "receiver": {
            "$ref": "#/components/schemas/PensionFund"
          },
          "payment": {
            "$ref": "#/components/schemas/Payment"
          },
          "status": {
            "type": "string",
            "enum": [
              "OPEN",
              "ACCEPTED_BY_RECEIVER",
              "REJECTED_BY_RECEIVER",
              "REJECTED_BY_SENDER",
              "CLOSED_BY_SENDER"
            ]
          },
          "expires-at": {
            "type": "string",
            "format": "date-time"
          }
        },
        "required": [
          "match-id"
        ]
      },
      "Transfer": {
        "title": "Transfer",
        "type": "object",
        "description": "Transfer",
        "properties": {
          "transfer-id": {
            "type": "string"
          },
          "sender-uid": {
            "type": "string"
          },
          "reciever-uid": {
            "type": "string"
          },
          "fzl": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/VestedBenefit"
            }
          },
          "payment": {
            "$ref": "#/components/schemas/Payment"
          }
        },
        "required": [
          "transfer-id",
          "sender",
          "reciever"
        ]
      },
      "Commencement": {
        "type": "object",
        "description": "Eintritt",
        "properties": {
          "commencement-id": {
            "type": "string"
          },
          "pension-fund-uid": {
            "type": "string"
          },
          "person-ahv": {
            "$ref": "#/components/schemas/PersonAHV"
          },
          "commencement-at": {
            "type": "string",
            "format": "date-time"
          },
          "internal-ref": {
            "type": "string"
          },
          "expires-at": {
            "type": "string",
            "format": "date-time"
          }
        },
        "required": [
          "commencement-id",
          "pension-fund-uid",
          "person-ahv",
          "commencement-at",
          "internal-ref"
        ]
      },
      "Termination": {
        "type": "object",
        "description": "Austritt",
        "properties": {
          "termination-id": {
            "type": "string"
          },
          "pension-fund-uid": {
            "type": "string"
          },
          "person-ahv": {
            "$ref": "#/components/schemas/PersonAHV"
          },
          "termination-at": {
            "type": "string",
            "format": "date-time"
          },
          "internal-ref": {
            "type": "string"
          },
          "expires-at": {
            "type": "string",
            "format": "date-time"
          }
        },
        "required": [
          "termination-id",
          "pension-fund-uid",
          "person-ahv",
          "termination-at",
          "internal-ref"
        ]
      },
      "PensionFund": {
        "type": "object",
        "description": "Vorsorgeeinrichtung (VE)",
        "title": "PensionFund",
        "properties": {
          "uid": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "street": {
            "type": "string"
          },
          "zip": {
            "type": "string"
          },
          "city": {
            "type": "string"
          },
          "additional-identifier": {
            "type": "string"
          }
        },
        "required": [
          "uid",
          "name"
        ]
      },
      "VestedBenefit": {
        "type": "object",
        "description": "FZL",
        "title": "VestedBenefit",
        "properties": {
          "fzl-id": {
            "type": "string"
          },
          "payment": {
            "$ref": "#/components/schemas/Payment"
          },
          "person-ahv": {
            "$ref": "#/components/schemas/PersonAHV"
          },
          "benefit-info": {
            "$ref": "#/components/schemas/BenefitInformation"
          }
        },
        "required": [
          "fzl-id",
          "person-ahv",
          "benefit-info"
        ]
      },
      "Payment": {
        "required": [
          "iban"
        ],
        "type": "object",
        "properties": {
          "iban": {
            "type": "string"
          },
          "reference": {
            "type": "string"
          }
        },
        "description": "Zahlung"
      },
      "PersonAHV": {
        "title": "PersonAHV",
        "type": "object",
        "description": "Person AHV",
        "properties": {
          "sozv-id": {
            "type": "string"
          },
          "birthday": {
            "type": "string",
            "format": "date-time"
          },
          "firstname": {
            "type": "string"
          },
          "lastname": {
            "type": "string"
          },
          "additional-name": {
            "type": "string"
          },
          "sex": {
            "type": "string",
            "enum": [
              "Male",
              "Female",
              "Other"
            ]
          },
          "street": {
            "type": "string"
          },
          "zip": {
            "type": "string"
          },
          "city": {
            "type": "string"
          },
          "country": {
            "type": "string"
          },
          "language": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "additional-address": {
            "type": "string"
          },
          "telephone": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "contact-person": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PersonAHV"
            }
          },
          "health-restriction": {
            "$ref": "#/components/schemas/HealthRestriction"
          },
          "civil-status": {
            "$ref": "#/components/schemas/CivilStatus"
          }
        },
        "required": [
          "sozv-id",
          "firstname",
          "lastname",
          "sex",
          "birthday",
          "street",
          "zip",
          "city",
          "health-restriction",
          "civil-status"
        ]
      },
      "HealthRestriction": {
        "title": "HealthRestriction",
        "type": "object",
        "description": "Gesundheitsvorbehalt",
        "properties": {
          "health-restriction-id": {
            "type": "string"
          }
        },
        "required": [
          "health-restriction-id"
        ]
      },
      "CivilStatus": {
        "title": "CivilStatus",
        "type": "object",
        "description": "Zivilstand",
        "properties": {
          "civil-status-id": {
            "type": "string"
          }
        },
        "required": [
          "civil-status-id"
        ]
      },
      "BenefitInformation": {
        "title": "BenefitInformation",
        "type": "object",
        "description": "Leistungsdaten",
        "properties": {
          "benefit-info-id": {
            "type": "string"
          },
          "transfer-reason": {
            "$ref": "#/components/schemas/TransferReason"
          },
          "pledge": {
            "$ref": "#/components/schemas/Pledge"
          },
          "purchasing": {
            "$ref": "#/components/schemas/Purchasing"
          },
          "divorce": {
            "$ref": "#/components/schemas/Divorce"
          },
          "wef": {
            "$ref": "#/components/schemas/HousingSubsidy"
          }
        },
        "required": [
          "benefit-info-id",
          "transfer-reason",
          "pledge",
          "purchasing",
          "divorce",
          "wef"
        ]
      },
      "TransferReason": {
        "title": "TransferReason",
        "type": "object",
        "description": "Übertragungsgrund",
        "properties": {
          "transfer-reason-id": {
            "type": "string"
          }
        },
        "required": [
          "transfer-reason-id"
        ]
      },
      "Purchasing": {
        "title": "Purchasing",
        "type": "object",
        "description": "Einkauf",
        "properties": {
          "purchasing-id": {
            "type": "string"
          }
        },
        "required": [
          "purchasing-id"
        ]
      },
      "Pledge": {
        "title": "Pledge",
        "type": "object",
        "description": "Verpfändung",
        "properties": {
          "pledge-id": {
            "type": "string"
          }
        },
        "required": [
          "pledge-id"
        ]
      },
      "HousingSubsidy": {
        "title": "HousingSubsidy",
        "type": "object",
        "description": "WEF",
        "properties": {
          "wef-id": {
            "type": "string"
          }
        },
        "required": [
          "wef-id"
        ]
      },
      "Divorce": {
        "title": "Divorce",
        "type": "object",
        "description": "Scheidung",
        "properties": {
          "divorce-id": {
            "type": "string"
          }
        },
        "required": [
          "divorce-id"
        ]
      }
    }
  }
}