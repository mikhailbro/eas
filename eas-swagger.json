{
  "openapi": "3.0.1",
  "info": {
    "title": "EAS API",
    "description": "EAS API Documentation, based on AufE exchange and match services",
    "version": "0.1"
  },
  "servers": [
    {
      "url": "/eas/api/v1"
    }
  ],
  "paths": {
    "/matches": {
      "get": {
        "operationId": "get-matches",
        "responses": {
          "default": {
            "description": "default response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Match"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/matches/{match-id}": {
      "get": {
        "operationId": "get-match",
        "parameters": [
          {
            "name": "matchId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "default response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Match"
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "match-id",
          "in": "path",
          "required": true
        }
      ]
    },
    "/matches/{match-id}/rejectBySender": {
      "post": {
        "description": "allows the sender to reject the match",
        "operationId": "rejectMatchBySender",
        "parameters": [
          {
            "name": "matchId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "default response",
            "content": {
              "application/json": {}
            }
          }
        }
      },
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "match-id",
          "in": "path",
          "required": true
        }
      ]
    },
    "/matches/{match-id}/rejectByReceiver": {
      "post": {
        "description": "allows the receiver to reject the match",
        "operationId": "rejectMatchByReceiver",
        "parameters": [
          {
            "name": "matchId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "default response",
            "content": {
              "application/json": {}
            }
          }
        }
      },
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "match-id",
          "in": "path",
          "required": true
        }
      ]
    },
    "/matches/{match-id}/acceptByReceiver": {
      "post": {
        "description": "allows the receiver to accept the match",
        "operationId": "acceptMatchByReceiver",
        "parameters": [
          {
            "name": "matchId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PaymentInfo"
              }
            }
          }
        },
        "responses": {
          "default": {
            "description": "default response",
            "content": {
              "application/json": {}
            }
          }
        }
      },
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "match-id",
          "in": "path",
          "required": true
        }
      ]
    },
    "/matches/{match-id}/acceptBySender": {
      "post": {
        "description": "allows the sender to accept the match",
        "operationId": "acceptMatchBySender",
        "parameters": [
          {
            "name": "matchId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "default response",
            "content": {
              "application/json": {}
            }
          }
        },
        "summary": ""
      },
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "match-id",
          "in": "path",
          "required": true
        }
      ]
    },
    "/ping": {
      "get": {
        "operationId": "ping",
        "responses": {
          "200": {
            "description": "default response",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                },
                "examples": {
                  "example-1": {}
                }
              }
            }
          }
        },
        "description": "Check API availability"
      }
    },
    "/terminations": {
      "post": {
        "operationId": "create-terminations",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Termination"
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "default response",
            "content": {
              "application/json": {}
            }
          }
        },
        "description": "Create terminations (Austritte)"
      },
      "put": {
        "summary": "",
        "operationId": "put-terminations",
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "description": "Full update of terminations (Austritte)",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Termination"
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "",
        "operationId": "patch-terminations",
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "description": "Partial update of terminations (Austritte)",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Termination"
                }
              }
            }
          }
        }
      }
    },
    "/commencements": {
      "post": {
        "operationId": "create-commencements",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Commencement"
                }
              }
            }
          }
        },
        "description": "Create commencements (Eintritte)",
        "responses": {
          "201": {
            "description": "Created"
          }
        }
      },
      "put": {
        "summary": "",
        "operationId": "put-commencements",
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "description": "Full update of a commencements array (Eintritte)",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Commencement"
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "",
        "operationId": "patch-commencements",
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "description": "Partial update of a commencements array (Eintritte)",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Commencement"
                }
              }
            }
          }
        }
      }
    },
    "/commencements/{commencement-id}": {
      "put": {
        "summary": "",
        "operationId": "put-commencements-commencement-id",
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "description": "Full update of a commencement (Eintritt)",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Commencement"
              }
            }
          }
        }
      },
      "delete": {
        "summary": "",
        "operationId": "delete-commencements-commencement-id",
        "description": "Delete a commencement (Eintritt)",
        "requestBody": {},
        "responses": {
          "204": {
            "description": "No Content"
          }
        }
      },
      "patch": {
        "summary": "",
        "operationId": "patch-commencements-commencement-id",
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "description": "Partial update of a commencement (Eintritt)",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Commencement"
              }
            }
          }
        }
      },
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "commencement-id",
          "in": "path",
          "required": true
        }
      ],
      "post": {
        "summary": "",
        "operationId": "post-commencements-commencement-id",
        "responses": {
          "201": {
            "description": "Created"
          }
        },
        "description": "Create a commencement (Eintritt)",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Commencement"
              }
            }
          }
        }
      },
      "get": {
        "summary": "",
        "operationId": "get-commencements-commencement-id",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Commencement"
                }
              }
            }
          },
          "404": {
            "description": "Not Found"
          }
        },
        "description": "Read a commencement by commencement-id"
      }
    },
    "/terminations/{termination-id}": {
      "put": {
        "summary": "",
        "operationId": "put--terminations-termination-id",
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "description": "Full update of a termination (Austritt)",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Termination"
              }
            }
          }
        }
      },
      "patch": {
        "summary": "",
        "operationId": "patch--terminations-termination-id",
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "description": "Partial update of a termination (Austritt)",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Termination"
              }
            }
          }
        }
      },
      "delete": {
        "summary": "",
        "operationId": "delete--terminations-termination-id",
        "responses": {
          "204": {
            "description": "No Content"
          }
        },
        "description": "Delete a termination (Austritt)",
        "requestBody": {}
      },
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "termination-id",
          "in": "path",
          "required": true
        }
      ],
      "get": {
        "summary": "",
        "operationId": "get-terminations-termination-id",
        "responses": {
          "200": {
            "description": "OK"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Termination"
                }
              }
            }
          }
        },
        "description": "Read a termination (Austritt) by termination-id"
      }
    }
  },
  "components": {
    "schemas": {
      "PaymentInfo": {
        "required": [
          "iban"
        ],
        "type": "object",
        "properties": {
          "iban": {
            "type": "string"
          },
          "reference": {
            "type": "string"
          }
        }
      },
      "Commencement": {
        "type": "object",
        "description": "Eintritt",
        "properties": {
          "uid": {
            "type": "string"
          },
          "sozv": {
            "type": "string"
          },
          "commencement-at": {
            "type": "string",
            "format": "date-time"
          },
          "birthday": {
            "type": "string",
            "format": "date-time"
          },
          "firstname": {
            "type": "string"
          },
          "lastname": {
            "type": "string"
          },
          "sex": {
            "type": "string",
            "enum": [
              "M",
              "W",
              "UNKNOWN"
            ]
          },
          "internal-ref": {
            "type": "string"
          },
          "expires-at": {
            "type": "string",
            "format": "date-time"
          },
          "commencement-id": {
            "type": "string"
          }
        },
        "required": [
          "uid",
          "sozv",
          "commencement-at",
          "birthday",
          "firstname",
          "lastname",
          "sex",
          "internal-ref",
          "commencement-id"
        ]
      },
      "Termination": {
        "type": "object",
        "description": "Austritt",
        "properties": {
          "uid": {
            "type": "string"
          },
          "sozv": {
            "type": "string"
          },
          "termination-at": {
            "type": "string",
            "format": "date-time"
          },
          "birthday": {
            "type": "string",
            "format": "date-time"
          },
          "firstname": {
            "type": "string"
          },
          "lastname": {
            "type": "string"
          },
          "sex": {
            "type": "string",
            "enum": [
              "M",
              "W",
              "UNKNOWN"
            ]
          },
          "internal-ref": {
            "type": "string"
          },
          "expires-at": {
            "type": "string",
            "format": "date-time"
          },
          "termination-id": {
            "type": "string"
          }
        },
        "required": [
          "uid",
          "sozv",
          "termination-at",
          "birthday",
          "firstname",
          "lastname",
          "sex",
          "internal-ref",
          "termination-id"
        ]
      },
      "Match": {
        "type": "object",
        "description": "E/A tinder ;)",
        "properties": {
          "match-id": {
            "type": "string"
          },
          "commencement": {
            "$ref": "#/components/schemas/Commencement"
          },
          "termination": {
            "$ref": "#/components/schemas/Termination"
          },
          "sending-pf": {
            "$ref": "#/components/schemas/PensionFund"
          },
          "receiving-pf": {
            "$ref": "#/components/schemas/PensionFund"
          },
          "payment-info": {
            "$ref": "#/components/schemas/PaymentInfo"
          },
          "status": {
            "type": "string",
            "enum": [
              "OPEN",
              "ACCEPTED_BY_RECEIVER",
              "REJECTED_BY_RECEIVER",
              "REJECTED_BY_SENDER",
              "CLOSED_BY_SENDER"
            ]
          },
          "expires-at": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "PensionFund": {
        "type": "object",
        "properties": {
          "uid": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "street": {
            "type": "string"
          },
          "zip": {
            "type": "string"
          },
          "city": {
            "type": "string"
          }
        },
        "description": "Vorsorgeeinrichtung (VE)",
        "title": "PensionFund"
      }
    },
    "securitySchemes": {
      "mTLS": {
        "type": "http",
        "scheme": "mutual"
      }
    }
  }
}